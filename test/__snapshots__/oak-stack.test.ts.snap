// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`oak stack reproduces snapshot 1`] = `
Object {
  "Outputs": Object {
    "GatewayOakCognitoOakcognitosigninurl2E914FBE": Object {
      "Description": "cognito sign in url",
      "Export": Object {
        "Name": "signInUrl",
      },
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "GatewayOakCognitoOakUserPoolOakCognitoDomainOakF2187020",
            },
            ".auth.",
            Object {
              "Ref": "AWS::Region",
            },
            ".amazoncognito.com/login?client_id=",
            Object {
              "Ref": "GatewayOakCognitoOakUserPoolOakUserPoolClientOak44A94B7E",
            },
            "&response_type=token&redirect_uri=https://main.d3dq4xzxmmo3wf.amplifyapp.com/can",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "DatabaseOakTableOak1FEE3FAA": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "pk",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "sk",
            "AttributeType": "S",
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "pk",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "sk",
            "KeyType": "RANGE",
          },
        ],
        "ProvisionedThroughput": Object {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "GatewayOakCognitoOakUserPoolOakA55CC282": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AccountRecoverySetting": Object {
          "RecoveryMechanisms": Array [
            Object {
              "Name": "verified_email",
              "Priority": 1,
            },
          ],
        },
        "AdminCreateUserConfig": Object {
          "AllowAdminCreateUserOnly": false,
        },
        "AutoVerifiedAttributes": Array [
          "email",
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "Policies": Object {
          "PasswordPolicy": Object {
            "MinimumLength": 8,
            "RequireLowercase": false,
            "RequireNumbers": false,
            "RequireSymbols": false,
            "RequireUppercase": false,
          },
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolName": "canOak",
        "UsernameAttributes": Array [
          "email",
        ],
        "UsernameConfiguration": Object {
          "CaseSensitive": false,
        },
        "VerificationMessageTemplate": Object {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Delete",
    },
    "GatewayOakCognitoOakUserPoolOakCognitoDomainOakF2187020": Object {
      "Properties": Object {
        "Domain": "greenstem-oak",
        "UserPoolId": Object {
          "Ref": "GatewayOakCognitoOakUserPoolOakA55CC282",
        },
      },
      "Type": "AWS::Cognito::UserPoolDomain",
    },
    "GatewayOakCognitoOakUserPoolOakUserPoolClientOak44A94B7E": Object {
      "Properties": Object {
        "AccessTokenValidity": 1200,
        "AllowedOAuthFlows": Array [
          "implicit",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": Array [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": Array [
          "http://localhost:6100/can",
          "https://main.d3dq4xzxmmo3wf.amplifyapp.com/can",
          "https://www.greenstem.uk/can",
        ],
        "IdTokenValidity": 1200,
        "LogoutURLs": Array [
          "http://localhost:6100/logout.html",
          "https://main.d3dq4xzxmmo3wf.amplifyapp.com/logout.html",
          "https://www.greenstem.uk/logout.html",
        ],
        "PreventUserExistenceErrors": "ENABLED",
        "SupportedIdentityProviders": Array [
          "COGNITO",
        ],
        "TokenValidityUnits": Object {
          "AccessToken": "minutes",
          "IdToken": "minutes",
        },
        "UserPoolId": Object {
          "Ref": "GatewayOakCognitoOakUserPoolOakA55CC282",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "GatewayOakDefaultStageD11DF7A7": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "GatewayOakF33261A6",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "GatewayOakF33261A6": Object {
      "Properties": Object {
        "CorsConfiguration": Object {
          "AllowHeaders": Array [
            "Authorization",
          ],
          "AllowMethods": Array [
            "GET",
            "PUT",
          ],
          "AllowOrigins": Array [
            "https://main.d3dq4xzxmmo3wf.amplifyapp.com/",
            "http://localhost:6100",
          ],
        },
        "Name": "GatewayOak",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "GatewayOakGETcanemailaddr0937DB92": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "GatewayOakF33261A6",
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": Object {
          "Ref": "GatewayOakdefaultAuthorizer37125998",
        },
        "RouteKey": "GET /can-email-addr",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "GatewayOakGETcanemailaddrCanEmailAddrIntegrationOak3CB55A6C",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "GatewayOakGETcanemailaddrCanEmailAddrIntegrationOak3CB55A6C": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "GatewayOakF33261A6",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "GatewayOakLambdasOakcanEmailAddrOak66F866D4",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "GatewayOakGETcanemailaddrCanEmailAddrIntegrationOakPermission3E95DB7D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "GatewayOakLambdasOakcanEmailAddrOak66F866D4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "GatewayOakF33261A6",
              },
              "/*/*/can-email-addr",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "GatewayOakGETcatalogA586C6FE": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "GatewayOakF33261A6",
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": Object {
          "Ref": "GatewayOakdefaultAuthorizer37125998",
        },
        "RouteKey": "GET /catalog",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "GatewayOakGETcatalogCatalogIntegrationOak71DAABED",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "GatewayOakGETcatalogCatalogIntegrationOak71DAABED": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "GatewayOakF33261A6",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "GatewayOakLambdasOakcatalogOakB5A9DC5A",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "GatewayOakGETcatalogCatalogIntegrationOakPermissionC1E5A9AD": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "GatewayOakLambdasOakcatalogOakB5A9DC5A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "GatewayOakF33261A6",
              },
              "/*/*/catalog",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "GatewayOakLambdasOakcanEmailAddrOak66F866D4": Object {
      "DependsOn": Array [
        "GatewayOakLambdasOakcanEmailAddrOakServiceRole416883D5",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "12604afe833d6e79ed7267d5c4e9aee6ff92ac20f62a5be061cc4873b882e6e9.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "GatewayOakLambdasOakcanEmailAddrOakServiceRole416883D5",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "GatewayOakLambdasOakcanEmailAddrOakServiceRole416883D5": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GatewayOakLambdasOakcatalogOakB5A9DC5A": Object {
      "DependsOn": Array [
        "GatewayOakLambdasOakcatalogOakServiceRoleA1239FDF",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "56a7143abf9ad31ca633fe4ca6bcf86e9dd5c66cb7058e750a2fc08622764298.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "GatewayOakLambdasOakcatalogOakServiceRoleA1239FDF",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "GatewayOakLambdasOakcatalogOakServiceRoleA1239FDF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GatewayOakLambdasOakexamOak5C55EBD6": Object {
      "DependsOn": Array [
        "GatewayOakLambdasOakexamOakServiceRole1C7DDD50",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "18589ccb2d191dff88fe08791732daf5adc809638d86adb568711de7593f3596.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "GatewayOakLambdasOakexamOakServiceRole1C7DDD50",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "GatewayOakLambdasOakexamOakServiceRole1C7DDD50": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GatewayOakLogGroupCanEmailAddrOakCABEEF7D": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "GatewayOakLambdasOakcanEmailAddrOak66F866D4",
              },
            ],
          ],
        },
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "GatewayOakLogGroupCatalogOak76CEB3C5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "GatewayOakLambdasOakcatalogOakB5A9DC5A",
              },
            ],
          ],
        },
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "GatewayOakLogGroupExamOakF8497159": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "GatewayOakLambdasOakexamOak5C55EBD6",
              },
            ],
          ],
        },
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "GatewayOakPUTexamexamId5C4E1265": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "GatewayOakF33261A6",
        },
        "AuthorizationType": "JWT",
        "AuthorizerId": Object {
          "Ref": "GatewayOakdefaultAuthorizer37125998",
        },
        "RouteKey": "PUT /exam/{examId}",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "GatewayOakPUTexamexamIdExamIntegrationOak8AA734D8",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "GatewayOakPUTexamexamIdExamIntegrationOak8AA734D8": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "GatewayOakF33261A6",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::GetAtt": Array [
            "GatewayOakLambdasOakexamOak5C55EBD6",
            "Arn",
          ],
        },
        "PayloadFormatVersion": "2.0",
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "GatewayOakPUTexamexamIdExamIntegrationOakPermissionD151DD6A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "GatewayOakLambdasOakexamOak5C55EBD6",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "GatewayOakF33261A6",
              },
              "/*/*/exam/{examId}",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "GatewayOakdefaultAuthorizer37125998": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "GatewayOakF33261A6",
        },
        "AuthorizerType": "JWT",
        "IdentitySource": Array [
          "$request.header.Authorization",
        ],
        "JwtConfiguration": Object {
          "Audience": Array [
            Object {
              "Ref": "GatewayOakCognitoOakUserPoolOakUserPoolClientOak44A94B7E",
            },
          ],
          "Issuer": Object {
            "Fn::Join": Array [
              "",
              Array [
                "https://cognito-idp.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".amazonaws.com/",
                Object {
                  "Ref": "GatewayOakCognitoOakUserPoolOakA55CC282",
                },
              ],
            ],
          },
        },
        "Name": "defaultAuthorizer",
      },
      "Type": "AWS::ApiGatewayV2::Authorizer",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
